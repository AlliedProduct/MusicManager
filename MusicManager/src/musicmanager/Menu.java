/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package musicmanager;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.util.ArrayList;
// reminder to fix play btn so it updates label for currently  playing
/**
 *
 * @author nojus
 */
public class Menu extends javax.swing.JFrame {
    
    private MainApp mainApp;

    /**
     * Creates new form Menu
     * @param mainApp
     */
    public Menu(MainApp mainApp) {
        initComponents();
        this.mainApp = mainApp;  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        playBtn = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        pauseBtn = new javax.swing.JButton();
        nowPlayingLabel = new javax.swing.JLabel();
        logoLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        partyTitle = new javax.swing.JLabel();
        addToPartyBtn = new javax.swing.JButton();
        removeBtn2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        partyTable = new javax.swing.JTable();
        searchBarParty = new javax.swing.JTextField();
        searchBtn2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        likedTable = new javax.swing.JTable();
        addsongBtn1 = new javax.swing.JButton();
        removeBtn1 = new javax.swing.JButton();
        listTitle1 = new javax.swing.JLabel();
        searchBarLiked = new javax.swing.JTextField();
        searchBtn1 = new javax.swing.JButton();
        sadTitle = new javax.swing.JLabel();
        addToSadBtn = new javax.swing.JButton();
        removeBtn3 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        sadTable = new javax.swing.JTable();
        searchBarSad = new javax.swing.JTextField();
        searchBtn3 = new javax.swing.JButton();
        moveUpBtn = new javax.swing.JButton();
        moveDownBtn = new javax.swing.JButton();
        moveDownBtn2 = new javax.swing.JButton();
        moveUpBtn3 = new javax.swing.JButton();
        moveUpBtn2 = new javax.swing.JButton();
        moveDownBtn3 = new javax.swing.JButton();
        showLikedBtn = new javax.swing.JButton();
        showAllBtn1 = new javax.swing.JButton();
        likedCountLabel = new javax.swing.JLabel();
        partyCountLabel = new javax.swing.JLabel();
        sadCountLabel = new javax.swing.JLabel();
        showAllBtn2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        playBtn.setBackground(new java.awt.Color(102, 102, 102));
        playBtn.setForeground(new java.awt.Color(255, 255, 255));
        playBtn.setText("Play");
        playBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playBtnActionPerformed(evt);
            }
        });

        title.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        title.setForeground(new java.awt.Color(102, 255, 255));
        title.setText("Music Manager");

        pauseBtn.setBackground(new java.awt.Color(102, 102, 102));
        pauseBtn.setForeground(new java.awt.Color(255, 255, 255));
        pauseBtn.setText("Pause");
        pauseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseBtnActionPerformed(evt);
            }
        });

        nowPlayingLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nowPlayingLabel.setForeground(new java.awt.Color(255, 255, 255));
        nowPlayingLabel.setText("Now Playing:");

        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicmanager/playicon1.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(title)
                .addGap(72, 72, 72)
                .addComponent(playBtn)
                .addGap(18, 18, 18)
                .addComponent(pauseBtn)
                .addGap(169, 169, 169)
                .addComponent(logoLabel)
                .addGap(18, 18, 18)
                .addComponent(nowPlayingLabel)
                .addContainerGap(259, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playBtn)
                    .addComponent(pauseBtn))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(title)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logoLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(nowPlayingLabel)
                        .addGap(38, 38, 38))))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 130));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        partyTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        partyTitle.setForeground(new java.awt.Color(255, 255, 255));
        partyTitle.setText("Party Mood");

        addToPartyBtn.setBackground(new java.awt.Color(102, 102, 102));
        addToPartyBtn.setForeground(new java.awt.Color(255, 255, 255));
        addToPartyBtn.setText("Add Song");
        addToPartyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToPartyBtnActionPerformed(evt);
            }
        });

        removeBtn2.setBackground(new java.awt.Color(102, 102, 102));
        removeBtn2.setForeground(new java.awt.Color(255, 255, 255));
        removeBtn2.setText("Remove Song");
        removeBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtn2ActionPerformed(evt);
            }
        });

        partyTable.setBackground(new java.awt.Color(102, 102, 102));
        partyTable.setForeground(new java.awt.Color(255, 255, 255));
        partyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Song", "Artist"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(partyTable);

        searchBtn2.setBackground(new java.awt.Color(102, 102, 102));
        searchBtn2.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn2.setText("Search");
        searchBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtn2ActionPerformed(evt);
            }
        });

        likedTable.setBackground(new java.awt.Color(102, 102, 102));
        likedTable.setForeground(new java.awt.Color(255, 255, 255));
        likedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Song Title", "Artist Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(likedTable);

        addsongBtn1.setBackground(new java.awt.Color(102, 102, 102));
        addsongBtn1.setForeground(new java.awt.Color(255, 255, 255));
        addsongBtn1.setText("Add Song");
        addsongBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addsongBtn1ActionPerformed(evt);
            }
        });

        removeBtn1.setBackground(new java.awt.Color(102, 102, 102));
        removeBtn1.setForeground(new java.awt.Color(255, 255, 255));
        removeBtn1.setText("Remove Song");
        removeBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtn1ActionPerformed(evt);
            }
        });

        listTitle1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        listTitle1.setForeground(new java.awt.Color(255, 255, 255));
        listTitle1.setText("Liked Songs");

        searchBarLiked.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBarLikedActionPerformed(evt);
            }
        });

        searchBtn1.setBackground(new java.awt.Color(102, 102, 102));
        searchBtn1.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn1.setText("Search");
        searchBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtn1ActionPerformed(evt);
            }
        });

        sadTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        sadTitle.setForeground(new java.awt.Color(255, 255, 255));
        sadTitle.setText("Sad mood");

        addToSadBtn.setBackground(new java.awt.Color(102, 102, 102));
        addToSadBtn.setForeground(new java.awt.Color(255, 255, 255));
        addToSadBtn.setText("Add Song");
        addToSadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToSadBtnActionPerformed(evt);
            }
        });

        removeBtn3.setBackground(new java.awt.Color(102, 102, 102));
        removeBtn3.setForeground(new java.awt.Color(255, 255, 255));
        removeBtn3.setText("Remove Song");
        removeBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtn3ActionPerformed(evt);
            }
        });

        sadTable.setBackground(new java.awt.Color(102, 102, 102));
        sadTable.setForeground(new java.awt.Color(255, 255, 255));
        sadTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Song", "Artist"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(sadTable);

        searchBtn3.setBackground(new java.awt.Color(102, 102, 102));
        searchBtn3.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn3.setText("Search");
        searchBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtn3ActionPerformed(evt);
            }
        });

        moveUpBtn.setText("Move Up");
        moveUpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveUpBtnActionPerformed(evt);
            }
        });

        moveDownBtn.setText("Move Down");
        moveDownBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveDownBtnActionPerformed(evt);
            }
        });

        moveDownBtn2.setText("Move Down");
        moveDownBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveDownBtn2ActionPerformed(evt);
            }
        });

        moveUpBtn3.setText("Move Up");
        moveUpBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveUpBtn3ActionPerformed(evt);
            }
        });

        moveUpBtn2.setText("Move Up");
        moveUpBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveUpBtn2ActionPerformed(evt);
            }
        });

        moveDownBtn3.setText("Move Down");
        moveDownBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveDownBtn3ActionPerformed(evt);
            }
        });

        showLikedBtn.setBackground(new java.awt.Color(102, 102, 102));
        showLikedBtn.setForeground(new java.awt.Color(255, 255, 255));
        showLikedBtn.setText("Show Liked");
        showLikedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showLikedBtnActionPerformed(evt);
            }
        });

        showAllBtn1.setBackground(new java.awt.Color(102, 102, 102));
        showAllBtn1.setForeground(new java.awt.Color(255, 255, 255));
        showAllBtn1.setText("Show Sad Songs");
        showAllBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllBtn1ActionPerformed(evt);
            }
        });

        likedCountLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        likedCountLabel.setForeground(new java.awt.Color(255, 255, 255));

        partyCountLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        partyCountLabel.setForeground(new java.awt.Color(255, 255, 255));

        sadCountLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        sadCountLabel.setForeground(new java.awt.Color(255, 255, 255));

        showAllBtn2.setBackground(new java.awt.Color(102, 102, 102));
        showAllBtn2.setForeground(new java.awt.Color(255, 255, 255));
        showAllBtn2.setText("Show Party Songs");
        showAllBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllBtn2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(addsongBtn1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(removeBtn1))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(moveUpBtn)
                            .addComponent(moveDownBtn)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(searchBarLiked, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBtn1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(searchBarParty, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBtn2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(moveDownBtn2)
                                    .addComponent(moveUpBtn2)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(addToPartyBtn)
                                .addGap(64, 64, 64)
                                .addComponent(removeBtn2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(searchBarSad, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchBtn3))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(addToSadBtn)
                                        .addGap(62, 62, 62)
                                        .addComponent(removeBtn3))
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(moveDownBtn3)
                                    .addComponent(moveUpBtn3))))))
                .addGap(0, 18, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(listTitle1)
                .addGap(102, 102, 102)
                .addComponent(likedCountLabel)
                .addGap(217, 217, 217)
                .addComponent(partyTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(partyCountLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sadTitle)
                .addGap(91, 91, 91)
                .addComponent(sadCountLabel)
                .addGap(125, 125, 125))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(showLikedBtn)
                .addGap(267, 267, 267)
                .addComponent(showAllBtn2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(showAllBtn1)
                .addGap(202, 202, 202))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(listTitle1)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(partyTitle)
                                .addComponent(sadTitle)
                                .addComponent(partyCountLabel)
                                .addComponent(sadCountLabel)))
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(likedCountLabel)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchBarParty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchBarLiked, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchBtn1))
                    .addComponent(searchBtn2)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchBtn3)
                        .addComponent(searchBarSad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addComponent(moveUpBtn2)
                                .addGap(18, 18, 18)
                                .addComponent(moveDownBtn2))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(132, 132, 132)
                                .addComponent(moveUpBtn3)
                                .addGap(18, 18, 18)
                                .addComponent(moveDownBtn3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(removeBtn2))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(removeBtn1)
                                    .addComponent(addsongBtn1)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addToPartyBtn))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addToSadBtn)
                                    .addComponent(removeBtn3)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(moveUpBtn)
                        .addGap(18, 18, 18)
                        .addComponent(moveDownBtn)
                        .addGap(217, 217, 217)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showLikedBtn)
                    .addComponent(showAllBtn1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(showAllBtn2)))
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 1200, -1));

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 170, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 660, 1200, 170));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addsongBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addsongBtn1ActionPerformed
        // TODO add your handling code here:
    String songTitle = JOptionPane.showInputDialog(null, "Enter Song Title: ", "Add Song", JOptionPane.QUESTION_MESSAGE);
    String artistName = JOptionPane.showInputDialog(null, "Enter Artist Name: ", "Add Song", JOptionPane.QUESTION_MESSAGE);
    
    if (songTitle != null && !songTitle.isEmpty() && artistName != null && !artistName.isEmpty()) {
        mainApp.addSong(songTitle, artistName);
        updateLikedTable();
    } else {
        JOptionPane.showMessageDialog(null, "Song title and artist name cannot be empty.", "Error", JOptionPane.ERROR_MESSAGE);
}
    updateSongCountLabels();
    }//GEN-LAST:event_addsongBtn1ActionPerformed

    private void removeBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtn1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = likedTable.getSelectedRow();
        if (selectedRowIndex != -1) { // If a row is selected
            mainApp.removeSong(selectedRowIndex);
            updateLikedTable();
        } else {
            JOptionPane.showMessageDialog(null, "Please select a song to remove.", "Error", JOptionPane.ERROR_MESSAGE);
        }
                updateSongCountLabels();
    }//GEN-LAST:event_removeBtn1ActionPerformed

    private void moveUpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveUpBtnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = likedTable.getSelectedRow();
        if (selectedRowIndex > 0) { 
            mainApp.moveSongUp(selectedRowIndex);
            updateLikedTable();
        }
    }//GEN-LAST:event_moveUpBtnActionPerformed

    private void moveDownBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveDownBtnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = likedTable.getSelectedRow();
        if (selectedRowIndex >= 0 && selectedRowIndex < likedTable.getRowCount() - 1) {
            mainApp.moveSongDown(selectedRowIndex);
            updateLikedTable();
        }
    }//GEN-LAST:event_moveDownBtnActionPerformed

    private void addToPartyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToPartyBtnActionPerformed
        // TODO add your handling code here:
    String[] lastSong = mainApp.getLastLikedSong();
    if (lastSong != null) {
        mainApp.addPartySong(lastSong);
        updatePartyTable();
    } else {
        JOptionPane.showMessageDialog(null, "No songs in liked list.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    updateSongCountLabels();
    }//GEN-LAST:event_addToPartyBtnActionPerformed

    private void moveUpBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveUpBtn2ActionPerformed
        // TODO add your handling code here
int selectedRowIndex = partyTable.getSelectedRow();
    if (selectedRowIndex > 0) { 
        mainApp.movePartySongUp(selectedRowIndex);
        updatePartyTable();
    }
    }//GEN-LAST:event_moveUpBtn2ActionPerformed

    private void moveDownBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveDownBtn2ActionPerformed
        // TODO add your handling code here:
    int selectedRowIndex = partyTable.getSelectedRow();
    if (selectedRowIndex >= 0 && selectedRowIndex < partyTable.getRowCount() - 1) {
        mainApp.movePartySongDown(selectedRowIndex);
        updatePartyTable();
    }
    }//GEN-LAST:event_moveDownBtn2ActionPerformed

    private void removeBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtn2ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = partyTable.getSelectedRow();
        if (selectedRowIndex != -1) {
            mainApp.removePartySong(selectedRowIndex);
            updatePartyTable();
        } else {
            JOptionPane.showMessageDialog(null, "Please select a song to remove.", "Error", JOptionPane.ERROR_MESSAGE);
        }
                updateSongCountLabels();
    }//GEN-LAST:event_removeBtn2ActionPerformed

    private void addToSadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToSadBtnActionPerformed
        // TODO add your handling code here:
String[] lastSong = mainApp.getLastLikedSong();
    if (lastSong != null) {
        mainApp.addSadSong(lastSong);
        updateSadTable();
    } else {
        JOptionPane.showMessageDialog(null, "No songs in liked list.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    updateSongCountLabels();
    }//GEN-LAST:event_addToSadBtnActionPerformed

    private void removeBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtn3ActionPerformed
        // TODO add your handling code here:
               int selectedRowIndex = sadTable.getSelectedRow();
        if (selectedRowIndex != -1) {
            mainApp.removeSadSong(selectedRowIndex);
            updateSadTable();
        } else {
            JOptionPane.showMessageDialog(null, "Please select a song to remove.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        updateSongCountLabels();
    }//GEN-LAST:event_removeBtn3ActionPerformed

    private void moveUpBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveUpBtn3ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = sadTable.getSelectedRow();
    if (selectedRowIndex > 0) { 
        mainApp.moveSadSongUp(selectedRowIndex);
        updateSadTable(); 
    }
    }//GEN-LAST:event_moveUpBtn3ActionPerformed

    private void moveDownBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveDownBtn3ActionPerformed
        // TODO add your handling code here:
            int selectedRowIndex = sadTable.getSelectedRow();
    if (selectedRowIndex >= 0 && selectedRowIndex < sadTable.getRowCount() - 1) {
        mainApp.moveSadSongDown(selectedRowIndex);
        updateSadTable(); 
    }//GEN-LAST:event_moveDownBtn3ActionPerformed
    }
    private void searchBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtn1ActionPerformed
        // TODO add your handling code here:
            String query = searchBarLiked.getText().trim().toLowerCase();
    searchLikedTable(query);

    }//GEN-LAST:event_searchBtn1ActionPerformed

    private void searchBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtn2ActionPerformed
        // TODO add your handling code here:
    String query = searchBarParty.getText().trim().toLowerCase();
    searchPartyTable(query);

    }//GEN-LAST:event_searchBtn2ActionPerformed

    private void searchBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtn3ActionPerformed
        // TODO add your handling code here:
    String query = searchBarSad.getText().trim().toLowerCase();
    searchSadTable(query);

    }//GEN-LAST:event_searchBtn3ActionPerformed

    private void showLikedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showLikedBtnActionPerformed
        // TODO add your handling code here:
      mainApp.listAllLikedSongs();
    }//GEN-LAST:event_showLikedBtnActionPerformed

    private void showAllBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllBtn2ActionPerformed
        // TODO add your handling code here:
    mainApp.listAllPartySongs();
    }//GEN-LAST:event_showAllBtn2ActionPerformed

    private void showAllBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllBtn1ActionPerformed
        // TODO add your handling code here:
     mainApp.listAllSadSongs();
    }//GEN-LAST:event_showAllBtn1ActionPerformed

    private void searchBarLikedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBarLikedActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_searchBarLikedActionPerformed

    private void playBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playBtnActionPerformed
        // TODO add your handling code here:
  ImageIcon logoIcon = new ImageIcon(getClass().getResource("playicon1.png"));
    logoLabel.setIcon(logoIcon);

    String nowPlaying;
    if (likedTable.getSelectedRow() != -1) {
        nowPlaying = mainApp.getSelectedSong(likedTable);
    } else if (partyTable.getSelectedRow() != -1) {
        nowPlaying = mainApp.getSelectedSong(partyTable);
    } else if (sadTable.getSelectedRow() != -1) {
        nowPlaying = mainApp.getSelectedSong(sadTable);
    } else {
        nowPlaying = "No song selected";
    }
    nowPlayingLabel.setText("Now playing: " + nowPlaying);
    }//GEN-LAST:event_playBtnActionPerformed

    
    
    private void pauseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseBtnActionPerformed
        // TODO add your handling code here:
  ImageIcon logoIcon = new ImageIcon(getClass().getResource("pauseicon1.png"));
    logoLabel.setIcon(logoIcon);
    }//GEN-LAST:event_pauseBtnActionPerformed
    
     public void addToPartySongs(ArrayList<String[]> likedSongs, ArrayList<String[]> partySongs, DefaultTableModel partyTableModel) {
        if (!likedSongs.isEmpty()) {
            String[] lastSong = likedSongs.get(likedSongs.size() - 1);
            partySongs.add(lastSong);
            updatePartyTable();
        } else {
            JOptionPane.showMessageDialog(null, "There are no liked songs to add to the party list.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
     //search tables
private void searchLikedTable(String query) {
    mainApp.searchTable(likedTable, query);
}

// Method to search within the Party table
private void searchPartyTable(String query) {
    mainApp.searchTable(partyTable, query);
}

// Method to search within the Sad table
private void searchSadTable(String query) {
    mainApp.searchTable(sadTable, query);
}
//update tables to display correct data
private void updatePartyTable() {
    DefaultTableModel model = (DefaultTableModel) partyTable.getModel();
    model.setRowCount(0); 
    ArrayList<String[]> songs = mainApp.getPartySongs();
    for (String[] song : songs) {
        model.addRow(song); 
    }
}

private void updateLikedTable() {
    DefaultTableModel model = (DefaultTableModel) likedTable.getModel();
    model.setRowCount(0); 
    ArrayList<String[]> songs = mainApp.getSongs();
    for (String[] song : songs) {
        model.addRow(song);
    }
}

private void updateSadTable() {
    DefaultTableModel model = (DefaultTableModel) sadTable.getModel();
    model.setRowCount(0);
    ArrayList<String[]> songs = mainApp.getSadSongs();
    for (String[] song : songs) {
        model.addRow(song);
}
}
 //update for the song counter, used in each add button so it is always up to date
public void updateSongCountLabels() {
    likedCountLabel.setText("" + mainApp.countLikedSongs());
    partyCountLabel.setText("" + mainApp.countPartySongs());
    sadCountLabel.setText("" + mainApp.countSadSongs());
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToPartyBtn;
    private javax.swing.JButton addToSadBtn;
    private javax.swing.JButton addsongBtn1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel likedCountLabel;
    private javax.swing.JTable likedTable;
    private javax.swing.JLabel listTitle1;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JButton moveDownBtn;
    private javax.swing.JButton moveDownBtn2;
    private javax.swing.JButton moveDownBtn3;
    private javax.swing.JButton moveUpBtn;
    private javax.swing.JButton moveUpBtn2;
    private javax.swing.JButton moveUpBtn3;
    private javax.swing.JLabel nowPlayingLabel;
    private javax.swing.JLabel partyCountLabel;
    private javax.swing.JTable partyTable;
    private javax.swing.JLabel partyTitle;
    private javax.swing.JButton pauseBtn;
    private javax.swing.JButton playBtn;
    private javax.swing.JButton removeBtn1;
    private javax.swing.JButton removeBtn2;
    private javax.swing.JButton removeBtn3;
    private javax.swing.JLabel sadCountLabel;
    private javax.swing.JTable sadTable;
    private javax.swing.JLabel sadTitle;
    private javax.swing.JTextField searchBarLiked;
    private javax.swing.JTextField searchBarParty;
    private javax.swing.JTextField searchBarSad;
    private javax.swing.JButton searchBtn1;
    private javax.swing.JButton searchBtn2;
    private javax.swing.JButton searchBtn3;
    private javax.swing.JButton showAllBtn1;
    private javax.swing.JButton showAllBtn2;
    private javax.swing.JButton showLikedBtn;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

}
